name: Luxury Events Data Collection

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  collect-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create config file
      env:
        EVENTBRITE_API_KEY: ${{ secrets.EVENTBRITE_API_KEY }}
      run: |
        echo '{
          "api_keys": {
            "eventbrite": "'$EVENTBRITE_API_KEY'",
            "meetup": "",
            "facebook": ""
          },
          "target_cities": [
            "London", "Paris", "Milan", "Monaco", "Zurich"
          ],
          "categories": [
            "fashion", "finance", "automotive", "food_wine", "real_estate"
          ],
          "collection_frequency": 24,
          "min_luxury_score": 6
        }' > config.json
        
    - name: Debug Eventbrite API
      env:
        EVENTBRITE_API_KEY: ${{ secrets.EVENTBRITE_API_KEY }}
      run: |
        echo "üîç Debugging Eventbrite API calls..."
        echo "Using token: ${EVENTBRITE_API_KEY:0:8}..." 
        echo ""
        
        echo "=== Test 1: Basic API connectivity ==="
        curl -s "https://www.eventbriteapi.com/v3/users/me/?token=$EVENTBRITE_API_KEY" | head -5
        echo ""
        
        echo "=== Test 2: Event search - basic ==="
        curl -s "https://www.eventbriteapi.com/v3/events/search/?token=$EVENTBRITE_API_KEY" | head -5
        echo ""
        
        echo "=== Test 3: Event search with location ==="
        curl -s "https://www.eventbriteapi.com/v3/events/search/?token=$EVENTBRITE_API_KEY&location.address=London" | head -5
        echo ""
        
        echo "=== Test 4: Event search with simple query ==="
        curl -s "https://www.eventbriteapi.com/v3/events/search/?token=$EVENTBRITE_API_KEY&q=fashion" | head -5
        echo ""
        
        echo "=== Test 5: Check available categories ==="
        curl -s "https://www.eventbriteapi.com/v3/categories/?token=$EVENTBRITE_API_KEY" | head -5
        echo ""
        
        echo "=== HTTP Status Codes ==="
        echo -n "Users/me: "
        curl -w "%{http_code}" -s -o /dev/null "https://www.eventbriteapi.com/v3/users/me/?token=$EVENTBRITE_API_KEY"
        echo ""
        echo -n "Basic search: "
        curl -w "%{http_code}" -s -o /dev/null "https://www.eventbriteapi.com/v3/events/search/?token=$EVENTBRITE_API_KEY"
        echo ""
        echo -n "London search: "
        curl -w "%{http_code}" -s -o /dev/null "https://www.eventbriteapi.com/v3/events/search/?token=$EVENTBRITE_API_KEY&location.address=London"
        echo ""
        echo -n "Categories: "
        curl -w "%{http_code}" -s -o /dev/null "https://www.eventbriteapi.com/v3/categories/?token=$EVENTBRITE_API_KEY"
        echo ""
        
    - name: Run data collection
      run: |
        echo "üîÑ Starting luxury events data collection..."
        python main.py
        echo "‚úÖ Data collection completed"
        
    - name: Debug generated files
      run: |
        echo "üìÅ Generated files:"
        ls -la *.html *.db *.json || echo "Some files may be generated"
        echo ""
        echo "üìä Dashboard file check:"
        if [ -f "status_dashboard.html" ]; then
          echo "‚úÖ Dashboard exists ($(wc -c < status_dashboard.html) bytes)"
          echo "First few lines:"
          head -3 status_dashboard.html
        else
          echo "‚ùå Dashboard file not found"
        fi
        echo ""
        echo "üóÑÔ∏è Database file check:"
        if [ -f "luxury_events.db" ]; then
          echo "‚úÖ Database exists ($(wc -c < luxury_events.db) bytes)"
        else
          echo "‚ùå Database file not found"
        fi
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        
    - name: Success notification
      run: |
        echo "üéâ Workflow completed!"
        echo "üìä Dashboard: https://${{ github.repository_owner }}.github.io/luxury-events-intelligence/"
        echo "üîó Direct link: https://${{ github.repository_owner }}.github.io/luxury-events-intelligence/status_dashboard.html"
